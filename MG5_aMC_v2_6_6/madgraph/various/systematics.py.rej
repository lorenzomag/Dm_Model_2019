--- madgraph/various/systematics.py	2019-02-03 21:24:20 +0000
+++ madgraph/various/systematics.py	2019-09-20 10:32:02 +0000
@@ -58,14 +58,19 @@
                  log=lambda x: sys.stdout.write(str(x)+'\n'),
                  only_beam=False,
                  ion_scaling=True,
+                 weight_format=None,
+                 weight_info=None,
                  ):
 
+
         # INPUT/OUTPUT FILE
         if isinstance(input_file, str):
             self.input = lhe_parser.EventFile(input_file)
         else:
             self.input = input_file
         self.output_path = output_file
+        self.weight_format = weight_format
+        self.weight_info_format = weight_info
         if output_file != None:
             if isinstance(output_file, str):
                 if output_file == input_file:
@@ -325,7 +330,8 @@
         else:
             lowest_id = self.get_id()        
 
-        ids = [lowest_id+i for i in range(len(self.args)-1)]
+        ids = [self.get_wgt_name(*self.args[i][:5], cid=lowest_id+i) for i in range(len(self.args)-1)]
+        #ids = [lowest_id+i for i in range(len(self.args)-1)]
         all_cross = [0 for i in range(len(self.args))]
         
         self.input.parsing = False
@@ -555,10 +561,6 @@
                 in_alps=False
             
             if mur == muf == 1 and dyn==-1 and alps ==1:
-                if pdf.lhapdfID < 0:
-                    for central,sets in self.pdfsets.items():
-                        if pdf in sets.set():
-                            misc.sprint(central)
                 
                 if pdf.lhapdfID in self.pdfsets:
                     if in_pdf:
@@ -577,7 +579,6 @@
                             (pdfset.name, pdfset.errorType,pdfset.lhapdfID, descrip)
                     in_pdf=pdfset.lhapdfID 
                 elif in_pdf and pdf.lhapdfID - pdf.memberID != in_pdf:
-                    misc.sprint(pdf.lhapdfID)
                     text += "</weightgroup> # PDFSET -> PDF\n"
                     in_pdf = False 
             elif in_pdf:
@@ -610,8 +611,11 @@
                 info += 'PDF=%s MemberID=%s' % (pdf.lhapdfID-pdf.memberID, pdf.memberID)
             else:
                 tag += 'PDF="%s" ' % pdf.lhapdfID
-                
-            text +='<weight id="%s" %s> %s </weight>\n' % (cid, tag, info)
+            
+            wgt_name = self.get_wgt_name(mur, muf, alps, dyn, pdf, cid)
+            tag = self.get_wgt_tag(mur, muf, alps, dyn, pdf, cid)
+            info = self.get_wgt_info(mur, muf, alps, dyn, pdf, cid)
+            text +='<weight id="%s" %s> %s </weight>\n' % (wgt_name, tag, info)
             cid+=1
         
         if in_scale or in_alps or in_pdf:
@@ -659,6 +663,44 @@
         
         return lowest_id
         
+    def get_wgt_name(self, mur, muf, alps, dyn, pdf, cid=0):
+        
+        if self.weight_format:            
+            wgt_name =  self.weight_format[0] % {'mur': mur, 'muf':muf, 'alps': alps, 'pdf':pdf.lhapdfID, 'dyn':dyn, 'id': cid}
+        else:
+            wgt_name = cid
+        return wgt_name
+    
+    def get_wgt_info(self, mur, muf, alps, dyn, pdf, cid=0):
+        
+        if self.weight_info_format:            
+            info =  self.weight_info_format[0] % {'mur': mur, 'muf':muf, 'alps': alps, 'pdf':pdf.lhapdfID, 'dyn':dyn, 'id': cid, 's':' ', 'n':'\n'}
+        else:
+            info = ''
+            if mur!=1.:
+                info += 'MUR=%s ' % mur
+            if muf!=1.:
+                info += 'MUF=%s ' % muf 
+            if alps!=1.:
+                info += 'alpsfact=%s ' % alps
+            if dyn!=-1.:
+                info += 'dyn_scale_choice=%s ' % {1:'sum pt', 2:'HT',3:'HT/2',4:'sqrts'}[dyn]                             
+            if pdf != self.orig_pdf:
+                info += 'PDF=%s MemberID=%s' % (pdf.lhapdfID-pdf.memberID, pdf.memberID)
+
+        return info
+
+    def get_wgt_tag (self, mur, muf, alps, dyn, pdf, cid=0):
+            tags = []
+            tags.append('MUR="%s" ' % mur)
+            tags.append('MUF="%s" ' % muf)
+            if alps!=1.:
+                tags.append('ALPSFACT="%s" ' % alps)
+            if dyn!=-1.:
+                tags.append('DYN_SCALE="%s" ' % dyn)
+            tags.append('PDF="%s" ' % pdf.lhapdfID)
+            return " ".join(tags)
+     
 
     def get_id(self):
         
@@ -720,7 +762,7 @@
             pdg = abs(pdg)
         elif pdg == 0:
             return 1
-        
+
         if self.only_beam and self.only_beam!= beam and pdf.lhapdfID != self.orig_pdf:
             return self.getpdfQ(self.pdfsets[self.orig_pdf], pdg, x, scale, beam)
         
@@ -761,10 +803,10 @@
             pdg = abs(pdg)
         elif pdg == 0:
             return 1
-        
+      
         if (pdf, pdg,x,scale, beam) in self.pdfQ2:
             return self.pdfQ2[(pdf, pdg,x,scale,beam)]
-        
+
         if self.orig_ion_pdf and (self.ion_scaling or pdf.lhapdfID == self.orig_pdf):
             nb_p = self.banner.run_card["nb_proton%s" % beam]
             nb_n = self.banner.run_card["nb_neutron%s" % beam]
@@ -825,6 +867,8 @@
                 mur = event.get_ht_scale(0.5)
             elif dyn == 4:
                 mur = event.get_sqrts_scale(1.)
+            if math.isnan(mur):
+                return mur
             muf1 = mur
             muf2 = mur
             loinfo = dict(loinfo)
