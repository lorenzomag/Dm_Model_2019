--- madgraph/various/banner.py	2019-06-20 08:57:47 +0000
+++ madgraph/various/banner.py	2019-09-20 10:32:02 +0000
@@ -2396,7 +2396,7 @@
                 comment = line[len(nline):]
                 nline = nline.split('=')
                 if python_template and nline[0].startswith('$'):
-                    block_name = nline[0][1:]
+                    block_name = nline[0][1:].strip()
                     this_group = [b for b in self.blocks if b.name == block_name]
                     if not this_group:
                         logger.debug("block %s not defined", block_name)
@@ -2714,6 +2714,8 @@
             targettype = type(self[name])
             if targettype == bool:
                 self[name] = False
+            if targettype == dict:
+                self[name] = '{}'
             elif 'min' in name:
                 self[name] = 0
             elif 'max' in name:
@@ -2858,7 +2860,7 @@
         self.add_param("event_norm", "average", allowed=['sum','average', 'unity'],
                         include=False, sys_default='sum')
         #cut
-        self.add_param("auto_ptj_mjj", False)
+        self.add_param("auto_ptj_mjj", True)
         self.add_param("bwcutoff", 15.0)
         self.add_param("cut_decays", False)
         self.add_param("nhel", 0, include=False)
@@ -3004,13 +3006,13 @@
         
         # parameter allowing to define simple cut via the pdg
         # Special syntax are related to those. (can not be edit directly)
-        self.add_param('pt_min_pdg',{'__type__':0.}, include=False)
-        self.add_param('pt_max_pdg',{'__type__':0.}, include=False)
-        self.add_param('E_min_pdg',{'__type__':0.}, include=False, hidden=True)
-        self.add_param('E_max_pdg',{'__type__':0.}, include=False, hidden=True)
-        self.add_param('eta_min_pdg',{'__type__':0.}, include=False)
-        self.add_param('eta_max_pdg',{'__type__':0.}, include=False)
-        self.add_param('mxx_min_pdg',{'__type__':0.}, include=False)
+        self.add_param('pt_min_pdg',{'__type__':0.}, include=False, cut=True)
+        self.add_param('pt_max_pdg',{'__type__':0.}, include=False, cut=True)
+        self.add_param('E_min_pdg',{'__type__':0.}, include=False, hidden=True,cut=True)
+        self.add_param('E_max_pdg',{'__type__':0.}, include=False, hidden=True,cut=True)
+        self.add_param('eta_min_pdg',{'__type__':0.}, include=False,cut=True)
+        self.add_param('eta_max_pdg',{'__type__':0.}, include=False,cut=True)
+        self.add_param('mxx_min_pdg',{'__type__':0.}, include=False,cut=True)
         self.add_param('mxx_only_part_antipart', {'default':False}, include=False)
         
         self.add_param('pdg_cut',[0],  system=True) # store which PDG are tracked
@@ -3251,6 +3253,7 @@
                 self['drjj'] = 0
                 self['drjl'] = 0
                 self['sys_alpsfact'] = "0.5 1 2"
+                self['systematics_arguments'].append('--alps=0.5,1,2')
                 
         # For interference module, the systematics are wrong.
         # automatically set use_syst=F and set systematics_program=none
@@ -3813,9 +3816,9 @@
                        hidden=True, system=True, include=False)
     
         # parameter allowing to define simple cut via the pdg
-        self.add_param('pt_min_pdg',{'__type__':0.}, include=False)
-        self.add_param('pt_max_pdg',{'__type__':0.}, include=False)
-        self.add_param('mxx_min_pdg',{'__type__':0.}, include=False)
+        self.add_param('pt_min_pdg',{'__type__':0.}, include=False,cut=True)
+        self.add_param('pt_max_pdg',{'__type__':0.}, include=False,cut=True)
+        self.add_param('mxx_min_pdg',{'__type__':0.}, include=False,cut=True)
         self.add_param('mxx_only_part_antipart', {'default':False}, include=False, hidden=True)
         
         #hidden parameter that are transfer to the fortran code
